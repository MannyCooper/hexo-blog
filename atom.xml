<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>安子璠的个人主页</title>
  <icon>https://anzifan.com/icon.png</icon>
  
  <link href="https://anzifan.com/atom.xml" rel="self"/>
  
  <link href="https://anzifan.com/"/>
  <updated>2020-12-23T20:45:18.941Z</updated>
  <id>https://anzifan.com/</id>
  
  <author>
    <name>安子璠</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>种草 Trilium 了……</title>
    <link href="https://anzifan.com/post/awesome_trilium/"/>
    <id>https://anzifan.com/post/awesome_trilium/</id>
    <published>2020-12-23T19:33:40.097Z</published>
    <updated>2020-12-23T20:45:18.941Z</updated>
    
    <content type="html"><![CDATA[<p>我去，<a href="https://github.com/zadam/trilium">Trilium</a> 也太赞了吧，折腾了这么久，这应该是我梦想中的知识管理软件，在少数派看了 <a href="https://sspai.com/u/idelem/updates">idelem</a> 大佬写的几篇文章，准备开始慢慢学习迁移了。</p><div style="position: absolute;right: 25px;top: 25px;"><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fbpic.588ku.com%2Felement_origin_min_pic%2F16%2F12%2F04%2Ffbf86b856538b3df9be9c8351c81e014.jpg&refer=http%3A%2F%2Fbpic.588ku.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1611346258&t=51ca51e0179f49614f3ef83081f38354" style="width: 54px;height: 54px;border-radius: 16px;object-fit: cover;"></div>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;我去，&lt;a href=&quot;https://github.com/zadam/trilium&quot;&gt;Trilium&lt;/a&gt; 也太赞了吧，折腾了这么久，这应该是我梦想中的知识管理软件，在少数派看了 &lt;a</summary>
        
      
    
    
    
    <category term="一言" scheme="https://anzifan.com/categories/%E4%B8%80%E8%A8%80/"/>
    
    
    <category term="软件推荐" scheme="https://anzifan.com/tags/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    
    <category term="效率" scheme="https://anzifan.com/tags/%E6%95%88%E7%8E%87/"/>
    
    <category term="信息管理" scheme="https://anzifan.com/tags/%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Keysmith：录制并重现你的操作</title>
    <link href="https://anzifan.com/post/macOS_setapp_keysmith/"/>
    <id>https://anzifan.com/post/macOS_setapp_keysmith/</id>
    <published>2020-12-23T09:56:01.823Z</published>
    <updated>2020-12-23T15:45:39.113Z</updated>
    
    <content type="html"><![CDATA[<article class="message message-immersive is-info">  <div class="message-body">    <i class="fas fa-info-circle"></i>    本文首发于<b>少数派</b> <img class="not-gallery-item" src="https://cdn.sspai.com/2019/10/10/55eccb51ac1e4c2ac60ce7ffed8a0618.jpg?imageMogr2/auto-orient/quality/95/thumbnail/!64x64r/gravity/Center/crop/64x64/interlace/1"style="width: 12px; height: 12px; border-top-left-radius: 32px; border-top-right-radius: 32px; border-bottom-right-radius: 32px; border-bottom-left-radius: 32px;" data-src="https://cdn.sspai.com/2019/10/10/55eccb51ac1e4c2ac60ce7ffed8a0618.jpg?imageMogr2/auto-orient/quality/95/thumbnail/!64x64r/gravity/Center/crop/64x64/interlace/1" lazy="loaded"> 👉 <a href="https://sspai.com/post/64173">Keysmith：录制并重现你的操作，为 macOS 自动化带来更多可能</a>  </div>  <img src="https://cdn.sspai.com/2019/10/10/55eccb51ac1e4c2ac60ce7ffed8a0618.jpg?imageMogr2/auto-orient/quality/95/thumbnail/!64x64r/gravity/Center/crop/64x64/interlace/1"style="border-radius: 60px;position: absolute;right: 10px;top: 10px;width: 35px;filter: opacity(0.8);" data-src="https://cdn.sspai.com/2019/10/10/55eccb51ac1e4c2ac60ce7ffed8a0618.jpg?imageMogr2/auto-orient/quality/95/thumbnail/!64x64r/gravity/Center/crop/64x64/interlace/1" lazy="loaded"></article><p>这里是 <strong>Setapp 应用介绍补完计划</strong>，该计划将收录 Setapp 上好用但还没被介绍的应用。</p><p>熟悉 macOS 的少数派们对于系统自带的 Automator「自动操作」一定不陌生。正如它的名字，Automator 允许用户在 macOS 上基于<strong>部分第一方应用或支持的第三方应用</strong>创建各种自动操作流程。作为一款隐藏的比较深的神器，少数派的作者们也挖掘出了很多「奇技淫巧」。</p><p>Automator 的操作类似加强版的 iOS「快捷指令」，采用模块化或录制的方式构建工作流程，不过有一定学习成本且支持的应用比较少。</p><p><img src="https://cdn.sspai.com/2020/12/22/23852eb3e09af24ef7d6787d191a8172.png" alt="Automator 对初学者来说略显复杂的界面"></p><p>本文要介绍的是一款更为简单直观，任何人都可以轻松上手的自动化软件——<strong>Keysmith</strong>。</p><h2 id="特性一览👇：">特性一览👇：</h2><ul><li>录制你的工作流，并用快捷键自动化复现</li><li>支持录制本地应用和网页的操作</li><li>可以调用 AppleScript 并与第三方联动</li><li>具有「聚焦搜索」风格的快速启动器</li><li>采用 Swift 语言编写，是使用起来无比丝滑的 macOS 原生应用</li></ul><p><img src="https://cdn.sspai.com/2020/12/23/9b520c25c98a3607be9ee78d5e963767.png" alt="一眼望到底的清爽"></p><h2 id="全面拥抱「录制」带来的轻巧感">全面拥抱「录制」带来的轻巧感</h2><p>Keysmith 描述自己为「创建自定义快捷键」，实在是有些谦虚，看似简单的功能其实给了用户很大的想象空间。</p><p>与 Automator 相反，Keysmith 的设计十分克制，你并不可以凭空添加自动化动作，一切动作都始于你的「录制」。也正因这份克制，Keysmith 拥有十分简洁的界面。</p><p><img src="https://cdn.sspai.com/2020/12/22/06aac2690115f08f974bba517befd4ed.png" alt="新建 - 录制 - 管理，这就是它全部的界面和工作流了"></p><h3 id="人人上手就会的基本操作">人人上手就会的基本操作</h3><p>新建一条 Macro 宏，你便可以点击右上角的「Record」按钮开始录制动作了。录制的过程中，Keysmith 会缩放到右上角并变成记录板，你可以在上面看到当前输入的动作和历史记录。录制好后只需点击「Stop recording」<strong>即可保存录制动作成宏指令</strong>。</p><p><img src="https://cdn.sspai.com/2020/12/22/6a0639b8e8f5e1ecbda6a5d1321bd0dd.gif" alt="动作会按照目标 App 分类"></p><p>录制完成后你也可以对录制好的动作进行微调，修改、删除或添加动作。在动作流中点击要修改的动作即可键入修改；点击动作右边的「More」按钮来删除或添加动作。支持添加的动作包括「键入文本」、「按压键位」、「点击元素」、「等待」、「运行 AppleScript」和「运行 Keysmith 宏指令」。没错，Keysmith 是可以「套娃」的。</p><p><img src="https://cdn.sspai.com/2020/12/23/8a5c7e1506ab98e43c62607493c5aac2.gif" alt="注意，如果你删除了全部动作，就无法再添加了，只能重新录制"></p><p>接下来，你可以给你录制的宏指令<strong>命名</strong>（支持 Emoji）并<strong>设置快捷键</strong>和<strong>生效位置</strong>。</p><p>Keysmith 的快捷键设置支持<strong>无限长的修饰键 + 单个其他键的组合</strong>，如果愿意你也可以将单键设置为宏指令的快捷键（不过会弹出警告⚠️，因为这意味着每次按到那个键都会运行宏指令）。</p><p>有些快捷键你希望全局生效，比如通过快捷键打开某些软件；而针对某一软件内的具体操作，更合适的做法是只在这一软件内生效。Keysmith 支持**自定义指令生效的位置，**全局、指定应用都可以，你可以很方便地给常用的软件们分别添加个性化的自动操作，大大提高了 Keysmith 功能的可塑性。</p><p><img src="https://cdn.sspai.com/2020/12/22/a323b17ed825a65c6ff3a0d1c6be1963.png" alt="这么长的快捷键也是可以的"></p><p>完成这些操作后，你就可以按下之前<strong>设置的快捷键激活你的自动化宏指令</strong>了。</p><p>由于 Keysmith 会在前台复现你录制好的动作，在指令运行的过程中最好<strong>不要键入或点击，以免干扰到自动化正常运作</strong>。</p><p>如有需要，可以在设置中勾选<strong>开机启动</strong>或设置软件快捷键如「快速记录动作」、「运行上一次的宏指令」、云同步等。</p><p><img src="https://cdn.sspai.com/2020/12/23/5668b44b8f54d3cdfad7ff60d6384667.png" alt="存储位置可以修改到云上，实现同步"></p><p>总结下整个流程：<strong>新建 - 录制 - 设定快捷键等信息 - 运行</strong>，仅需 4 步、短短几秒就可以实现一键处理那些繁琐的操作流程。在这个忙碌的时代，「快」是 KeySmith 的核心竞争力之一。</p><h3 id="举个例子">举个例子</h3><p>下面随手举个简单的实例说明下，我现在希望实现一个快捷操作：<strong>打开音乐 app - 开启「秒选随机播放」- 关闭音乐 app 窗体</strong>。</p><p>不要一上来就啪啪啪一阵乱点，我们应当首先思考确认每一步要操作什么，避免重复录制，比如：</p><ul><li>打开音乐 app：我将点击<strong>程序坞里的音乐 app 图标</strong>，因为我<strong>平常</strong>将它<strong>固定</strong>在我 Dock 栏的固定位置。</li><li>开启「妙选随机播放」：我可能并不会首选按住 <kbd>⌥ Option</kbd> 并点击播放键边上的按钮的方式，而会采用**点击顶部菜单栏中的「控制」选单，然后点击「妙选随机播放」**或使用快捷键 <kbd>⌥ Option</kbd> + <kbd>空格</kbd>（如果该快捷键没有被占用的话）。</li><li>关闭音乐 app 窗体：我可能会首选 <kbd>⌘ Cmd</kbd> + <kbd>w</kbd> 关闭窗体。</li></ul><p>如此操作有些<strong>其实是冗余的</strong>，这里例举出来只是为了给大部分自动化场景一个<strong>参考</strong>，让它们适用且稳定可靠，在后文中「注意事项和小贴士」板块会详细介绍这一点。</p><p>思考好流程后就十分简单了，新建、录制后走一遍流程，最后绑定快捷键就成功了🎉。</p><p><img src="https://cdn.sspai.com/2020/12/23/aa2a6eb30c225082d547eb7d1e5369da.png" alt="这样做其实是麻烦了"></p><p>其实我们可以将第一步的「in Dock」操作删除，只留「Open 音乐」也会正常打开 app，如遇到无法识别的应用，也可以手动指定路径；在这个案例中，鼠标操作或是键盘快捷键都是可以正常识别的，所以最终简化版如下：</p><p><img src="https://cdn.sspai.com/2020/12/23/2707c649efceeb2ded96e2d6dc33dc33.png" alt="简单易懂吧，你还可以导出并分享你的宏指令，点击 这里 获取上述指令"></p><p>按下自定义的 <kbd>⇧ Shift</kbd> + <kbd>⌘ Cmd</kbd> + <kbd>M</kbd> 尝试一下：</p><p><img src="https://cdn.sspai.com/2020/12/23/243fa0a54ec8c62bf3fe45928e4b66c9.gif" alt="完美，这可不是我手动在点哈🙈"></p><p>是不是十分方便快捷？当然你还可以制作更简单的操作，比如给常用的应用添加快速启动快捷键等等；你也可以制作更复杂的操作，比如…… 我们接着往后看：</p><h2 id="不仅操控本地，也能操控云端">不仅操控本地，也能操控云端</h2><p>是的，Keysmith 还支持制作操控网页的自动化宏指令，这需要我们安装对应的<strong>浏览器插件</strong>。目前，Keysmith 支持 Chrome 和 Firefox 浏览器，你可以在初始化设置时安装或前往浏览器应用商城自行安装。</p><p><img src="https://cdn.sspai.com/2020/12/23/0e61b7cbef27075022fa8a224d5bb3f5.png" alt="虽然知道不太可能，但还是希望能适配 Safari ……"></p><p>这样，Keysmith 就可以根据 Chrome 浏览器中的网页响应和 DOM 结构来制作基于网页的自动化流程了。比如下图就演示了在少数派首页查看「关注」标签页的例子，可以看到有一个「Wait for the page to load」即等待页面加载，这是由你录制时候的行为决定的。如果你在录制的时候等待网页完全加载了，那么在动作中也会记录下这一倾向。</p><p><img src="https://cdn.sspai.com/2020/12/23/ab81182570d8c3ea4c9f0845b1a1140a.png" alt="此指令 会跳转到少数派主页的「关注」标签页"></p><p>对于 <code>&lt;li&gt;</code> 标签的列表结构，Keysmith 还支持点选列表首位或末位元素。</p><p><img src="https://cdn.sspai.com/2020/12/23/443207101fb3133f644cf9fdddd5b4fb.png" alt="老实说，这个功能容易失效"></p><h2 id="锦上添花，与第三方联动">锦上添花，与第三方联动</h2><p>你可能注意到了 Keysmith 支持在动作中<strong>添加 AppleScript</strong> 和用户已创建的 <strong>Keysmith 指令</strong>，脚本和「套娃」的支持极大地扩展了 Keysmith 的上线，你可以在少数派中查看「AppleScript」<a href="https://sspai.com/post/46912">相关文章</a> 学习脚本的编写。</p><p>除此之外，我还想再提一个让苹果效率用户快乐的词——<strong>URL Schemes</strong>。简单来说，URL Schemes 是可以链接到软件内部的链接，第三方软件可以通过它跳转到某一软件或调用其功能，关于「URL Schemes」少数派中也有大佬做过 <a href="https://sspai.com/post/44591">详细介绍</a> 。</p><p><img src="https://cdn.sspai.com/2020/12/23/8de1521c2c9e3239b7fee9b5dd97d61e.png" alt="URL Schemes 意味着更多的联动可能"></p><p>Keysmith 中每一条指令都有其对应的 URL Schemes。右键创建好的宏指令，点击「Copy Macro URL」即可复制形如 <code>keysmith://run-macro/F1FCD7CD-E276-4C87-848F-12F3CB8D5878</code> 的 URL Schemes。</p><p style="text-align: center;"><a class="gallery-item" href="https://cdn.sspai.com/2020/12/23/b6b8d341ea4441ebdf4c2daa824ef48d.png" style=""><img src="https://cdn.sspai.com/2020/12/23/b6b8d341ea4441ebdf4c2daa824ef48d.png" alt="img" style="width: 45%;display: inline-block;margin-right: 10px;"></a><a class="gallery-item" href="https://cdn.sspai.com/2020/12/23/a83371ce7f3d168c3f4e47b37fc011d6.png" style="display: inline;"><img src="https://cdn.sspai.com/2020/12/23/a83371ce7f3d168c3f4e47b37fc011d6.png" alt="带上链接去创造吧" style="width: 50%;display: inline-block;"></a><p class="has-text-centered is-size-6 caption">带上链接去创造吧</p></p><p>接下来你就可以用 URL Schemes 去和脍炙人口的效率工具们联动了，比如同在 Setapp 里的 BetterTouchTool 以及 Alfred、Keyboard Maestro 等，相信你能探索出更多玩法。</p><p>另外官方 <a href="https://www.keysmith.app/blog/using-keysmith-with-other-automation-apps">博客</a> 中还提供了在不同平台和编程语言中使用 URL Schemes 的教程供你参考。</p><h2 id="注意事项、小贴士和其他问题">注意事项、小贴士和其他问题</h2><p>除了上面提到的「<strong>运行时尽量不要操作</strong>」外，你可能还需要关注以下几件事👇。</p><h3 id="不可忽视的录制技巧">不可忽视的录制技巧</h3><p>你应该发现了，Keysmith 的设计理念其实和 Automator 并不相同——前者强调<strong>实际的点击或键入</strong>，是可视的、是在「明处」的；而后者则强调流程和步骤的输入输出，大多数情况可以是不可视的、是在「暗处」的。</p><p>意识到这一点在实际使用中是十分重要的，这意味着我们录制动作时需要考虑到<strong>不同场景下的「可复用性」</strong>，下面是一些坑：</p><ol><li><p>建议使用更<strong>普适的动作和路径</strong>，比如尽量直接使用「Open 某 App」 的动作或点击程序坞中的固定图标、通过终端命令行打开文件或文件夹等，其次是通过 Spotlight 或启动台打开，这样可以避免出现可能的定位错误或依附于无法录入的滑动操作等情况；</p></li><li><p><strong>优先选择最先加载出来的左上角菜单栏，其次是键盘快捷键最后是鼠标点击</strong>，这是因为键盘快捷键和左上角菜单栏的设定很固定、很少做改动且生效很快，保证了自动化的鲁棒性；</p></li><li><p>当使用网页自动化的时候，需要注意 Keysmith 是<strong>无法辨别多个相同元素</strong>的，比如少数派首页的「一派」和「Matrix 精选」都有「查看全部」按钮，Keysmith 就不知道该点哪个了，这时只能使用点击某固定点的方式了；</p><p><img src="https://cdn.sspai.com/2020/12/23/bf08335770ece8a26acbbc57d98c99c7.png" alt="遇到网页中相同元素时，表示困惑的 Keysmith 浏览器插件"></p></li><li><p>使用「点击元素」这个功能时要<strong>好好考虑</strong>，因为当你点击的地方没有检测到可点击控件或结构时，它便会<strong>点击元素在窗口的相对位置</strong>，而很多时候目标元素会随着窗口大小的变化而位移，并没有键盘操作或菜单栏来得可靠。</p></li></ol><p><img src="https://cdn.sspai.com/2020/12/23/e12844685deb1b8ebaff67b76354f54c.png" alt="长这样，箭头 + 数字代表着从某一边按照箭头方向到目标点的距离"></p><p>不过经过大量测试，即使是网页，大部分情况下 KeySmith 都可以<strong>很好地识别控件或 DOM 结构</strong>，你只需要留意操作过程中识别是否正常即可。</p><h3 id="不知道要弄些啥？来看看官方的案例参考">不知道要弄些啥？来看看官方的案例参考</h3><p>如果你不知道该用 Keysmith 做些什么，官方网站有不少 <a href="https://www.keysmith.app/examples">案例</a> 也许可以给你带来一些灵感。</p><p>官方将国外一些常见的办公、协作软件作为例子展示了软件的各种特性， GitHub、Google Docs、Slack、Trello、Zoom 等等都是我们所熟悉且可以模仿学习的，最后列举出的 AppleScipt 也很值得参考。</p><p><img src="https://cdn.sspai.com/2020/12/23/208f92dd7730b9e5875028cdcd91dfab.png" alt="点击卡片右下角就可以直接导入官方指令"></p><h3 id="指令太多，快捷键记不住？请使用快速启动器">指令太多，快捷键记不住？请使用快速启动器</h3><p>当我们创建了太多指令后，难免会忘记对应的快捷键，这时只要按下 <kbd>⌥ Option</kbd> + <kbd>⌘ Cmd</kbd> + <kbd>空格</kbd> 即可激活一个很清爽的<strong>快速启动器</strong>，不得不说作者想的很周到。当你通过快速启动器搜索、点选你想要的指令后，无需跳转到 Keysmith 便可执行指令。</p><p><img src="https://cdn.sspai.com/2020/12/23/8b2eae9d3f551637b151e1d734b257b9.png" alt="如果可以把全局和当前软件的指令分开就完美了"></p><h3 id="我是-Keyboard-Maestro-用户，Keysmith-和它有什么区别？">我是 Keyboard Maestro 用户，Keysmith 和它有什么区别？</h3><p>我知道，Keyboard Maestro 用户看本文可能急死了，Automator 开头都提了，更加强悍的 Keyboard Maestro 呢？！是的，<strong>Keyboard Maestro 作为老牌效率软件口碑很好、很棒、很强大</strong>，两款相似又好用的工具难免被拉来做对比，具体区别就不在本文赘述了。简单来说，Keyboard Maestro 确实拥有更多的复杂功能 ，但 Keysmith <strong>更加简洁，更加面向大众</strong>。对此 Keysmith 官方打了个也许不是那么恰当的比喻👇。</p><blockquote><p>If using Keyboard Maestro is like <strong>driving a stick shift</strong>, using Keysmith is like <strong>driving an automatic</strong>. Both are fine choices – it’s largely a matter of personal preference.</p></blockquote><p><img src="https://cdn.sspai.com/2020/12/23/d991cc35e8f83c9d3a280a074909bbcd.png" alt="官方认为 Keysmith 之于 Keyboard Maestro 就像手动挡之于自动挡，那么你更倾向于哪个呢？"></p><p>感兴趣的可以看看官方的 <a href="https://www.keysmith.app/blog/keysmith-vs-keyboard-maestro">对比博文</a> 。</p><h2 id="获取方式与价格">获取方式与价格</h2><p>你可以在订阅制应用商城 Setapp 中 <a href="https://setapp.com/apps/keysmith">获取它</a> ，或在 <a href="https://www.keysmith.app/release-notes">官网</a> 购买 29 美元的单设备许可证（目前只支持银行卡支付）。</p><div class="box app_recommend">  <article class="media">    <figure class="fences-icon media-left app_icon image">      <img class="not-gallery-item" src="https://cdn.sspai.com/2020/12/23/ba88f6bbc85571238f7cdc78e44090fd.png" />    </figure>    <div class="media-content">      <div class="content">        <p>          <strong>WeMod</strong>          <br />          <small>世界上最好的游戏修改器合集</small>        </p>      </div>    </div>    <nav class="level is-flex download-icon is-align-items-center">      <a href="https://www.wemod.com/download">      <span class="icon is-medium steam-icon">        <b>w</b>          </a>      </span>    </nav>    <div class="product__price-tag"><p class="product__price-tag-price" style="color: #fff;font-size: 13px;font-weight: bold;">免费</p></div>  </article></div><style>.steam-icon{background-color:#171a21;color:white} .stardock-icon{background-color:#014b8d;fill:white;} .taobao-icon{background-color:#fe8600;} .dark .fences-icon{background-color: #1d1d1f} .fences-icon{background-color: white} .fences-icon{padding:7px !important;display: flex; align-items: center;} .fences-icon img{border-radius: 0px !important;vertical-align:middle;object-fit: initial !important; height: auto !important;}</style><p><img src="https://cdn.sspai.com/2020/12/23/955db738b98c966ba438d08ebd61ae40.png" alt="只支持 macOS Catalina 之后的版本，对少数派上的大家肯定不是问题"></p><hr><p>以上就是关于 Keysmith 的介绍，它是 2020 年下半年刚出的一款「新生儿」软件，这个时代渐渐拥抱极简，相信它可以做的越来越好。当我在 Setapp 里第一次看到它，便被它的创意吸引，期待它可以支持更复杂的逻辑。我认为 Keysmith 的威力不止于此，本文只是<strong>抛砖引玉</strong>，期待大家挖掘出更多新奇的玩法。</p><div class="box app_recommend">  <article class="media">    <figure class="fences-icon media-left app_icon image">      <img class="not-gallery-item" src="https://cdn.sspai.com/2020/12/23/2d0da227224d47a8c605457da87be149.png" />    </figure>    <div class="media-content">      <div class="content">        <p>          <strong>Keysmith</strong>          <br />          <small>为你的 Mac 和网络创建自定义键盘快捷键</small>        </p>      </div>    </div>    <nav class="level is-flex download-icon is-align-items-center">      <a href="https://setapp.com/apps/keysmith">      <span class="icon is-medium steam-icon">        <b>S</b>          </a>      </span>      <a href="https://setapp.com/apps/keysmith">      <span class="icon is-medium steam-icon">        <b>⌘</b>          </a>      </span>    </nav>    <div class="product__price-tag"><p class="product__price-tag-price" style="color: #fff;font-size: 13px;font-weight: bold;">$ 29</p></div>  </article></div><style>.steam-icon{background-color:#171a21;color:white} .stardock-icon{background-color:#014b8d;fill:white;} .taobao-icon{background-color:#fe8600;} .dark .fences-icon{background-color: #1d1d1f} .fences-icon{background-color: white} .fences-icon{padding:7px !important;display: flex; align-items: center;} .fences-icon img{border-radius: 0px !important;vertical-align:middle;object-fit: initial !important; height: auto !important;}</style>]]></content>
    
    
    <summary type="html">基于录制，为 macOS 自动化带来更多可能</summary>
    
    
    
    <category term="工具" scheme="https://anzifan.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="软件推荐" scheme="https://anzifan.com/tags/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    
    <category term="效率" scheme="https://anzifan.com/tags/%E6%95%88%E7%8E%87/"/>
    
    <category term="macOS" scheme="https://anzifan.com/tags/macOS/"/>
    
    <category term="Setapp" scheme="https://anzifan.com/tags/Setapp/"/>
    
  </entry>
  
  <entry>
    <title>WeMod：世界上最好用的单机游戏修改器</title>
    <link href="https://anzifan.com/post/windows_wemod/"/>
    <id>https://anzifan.com/post/windows_wemod/</id>
    <published>2020-12-22T08:02:36.048Z</published>
    <updated>2020-12-23T15:43:13.019Z</updated>
    
    <content type="html"><![CDATA[<article class="message message-immersive is-info">  <div class="message-body">    <i class="fas fa-info-circle"></i>    本文首发于<b>少数派</b>    <img class="not-gallery-item" src="https://cdn.sspai.com/2019/10/10/55eccb51ac1e4c2ac60ce7ffed8a0618.jpg?imageMogr2/auto-orient/quality/95/thumbnail/!64x64r/gravity/Center/crop/64x64/interlace/1"style="width: 12px; height: 12px; border-top-left-radius: 32px; border-top-right-radius: 32px; border-bottom-right-radius: 32px; border-bottom-left-radius: 32px;" data-src="https://cdn.sspai.com/2019/10/10/55eccb51ac1e4c2ac60ce7ffed8a0618.jpg?imageMogr2/auto-orient/quality/95/thumbnail/!64x64r/gravity/Center/crop/64x64/interlace/1" lazy="loaded"> 👉 <a href="https://sspai.com/post/64152">世界上最好用的单机游戏修改器——WeMod</a>  </div>  <img src="https://cdn.sspai.com/2019/10/10/55eccb51ac1e4c2ac60ce7ffed8a0618.jpg?imageMogr2/auto-orient/quality/95/thumbnail/!64x64r/gravity/Center/crop/64x64/interlace/1"style="border-radius: 60px;position: absolute;right: 10px;top: 10px;width: 35px;filter: opacity(0.8);" data-src="https://cdn.sspai.com/2019/10/10/55eccb51ac1e4c2ac60ce7ffed8a0618.jpg?imageMogr2/auto-orient/quality/95/thumbnail/!64x64r/gravity/Center/crop/64x64/interlace/1" lazy="loaded"></article><blockquote><p>修改不了人生，但你可以修改游戏。</p></blockquote><h2 id="游戏修改器，属于-PC-玩家的「地下王国」"><strong>游戏修改器，属于</strong> PC 玩家的「地下王国」</h2><p>做为一名<strong>单机游戏</strong>玩家，你一定遇到过以下场景：</p><ul><li>这款游戏太难了，而我只想体验剧情</li><li>xxsss这条任务太烦了，而我并没有那么多时间去刷</li><li>这个角色太菜了，而我想让他「上天入地」、子弹无限、技能无冷却等</li><li>……</li></ul><p>也许你在游玩《赛博朋克 2077》的这几天就有过这种无力感。</p><p>幸运的是，作为一个「PC 党」，最幸福的事莫过于对买到手的单机游戏有<strong>完全的支配权</strong>。</p><p>于是你兴高采烈地搜索「游戏名 + 修改器」，来到那些花里胡哨的门户网站，并熟练地穿过层层广告和诱导陷阱，下载了由「风灵月影」大大制作的「XX项修改器」。</p><p><img src="https://cdn.sspai.com/2020/12/21/d614140057d9399b9ce8c654f760424e.png" alt="这样的界面，你一定非常熟悉了"></p><p>大多数情况下修改器非常好用，下载过程中捆绑的软件也并不能影响到「久经沙场」的你。直到你发现电脑中堆满了这个图标👇：</p><p><img src="https://cdn.sspai.com/2020/12/21/677db538e92ed8c05b1b48aa5fbab482.png" alt="让人无法直视也无法忽视的设计......"></p><p>这时你才开始思考一个问题：<strong>还有更「优雅」的解法吗？</strong></p><p>能用，但是不够「优雅」。相信「风灵月影」大大本人也是这么想的，于是制作了自己修改器的 <a href="https://www.3dmgame.com/original/3742375.html">集合版本</a> ，但它有着「安装过程捆绑软件」、「太多无关内容和广告」、「没适配高分屏」等几宗罪，所以本文的主角并不是它。</p><p>本文要介绍的是一款具有现代化设计的<strong>修改器整合软件</strong>——<strong>WeMod</strong>。这款软件「优雅」的同时可谓是「降维打击」。对于喜欢修改游戏的玩家来说，我相信「用了便回不去了」。</p><h2 id="一切关于游戏，一切为了玩家">一切关于游戏，一切为了玩家</h2><h3 id="简洁的启动体验">简洁的启动体验</h3><p>WeMod 非常干净简洁，且安装包只有 100 多 KB，从 <a href="https://www.wemod.com/download">官网</a> 下载至安装、使用的过程中，也没有一丝广告和捆绑软件。</p><p>初次打开软件后别被登陆框所吓到，直接点击右下角的「Continue with New Account」便会帮你创建一个账号并进入主页，<strong>整个过程无需输入任何信息</strong>，非常快捷。新账号会附赠 100 WePoints 点数，点数的作用将在后文介绍。（如果要保存点数或参与社区讨论等，你可以之后在设置中绑定邮箱。）</p><p><img src="https://cdn.sspai.com/2020/12/22/3c8b9c172b7051e53443d39fdcde460c.png" alt="不绑定也完全不影响核心功能使用"></p><p>WeMod 的设计简洁大气。首先印入眼帘的便是时下热门游戏的轮播图，右下角的「活动」会显示修改器们的更新时间轴，完成右上角的「目标」可以赚取 WePoints 点数。</p><p><img src="https://cdn.sspai.com/2020/12/22/cd7e23add33e997f90db5f8ec1cce0e3.png" alt="看着又想畅游「夜之城」了"></p><h3 id="超过千款游戏支持">超过千款游戏支持</h3><p>WeMod 目前支持<strong>超过千款</strong>热门游戏，且每周都会追加游戏列表。由于很多修改器原作者都入驻了，所以修改器内容更新也是最全最及时的。千款游戏听起来不多，但其实已经涵盖了主流热门游戏（供参考，「风灵月影」大大共制作了 700 多款修改器），至少在我使用过程没有出现想要的游戏没有对应修改器的尴尬情况。</p><p style="margin-bottom:0px;"><a class="gallery-item" href="https://cdn.sspai.com/2020/12/22/3172ce5df20b1c47bb704bbfe6491a7b.png"><img src="https://cdn.sspai.com/2020/12/22/3172ce5df20b1c47bb704bbfe6491a7b.png"></a></p><p class="has-text-centered is-size-6 caption">你可以在 <a href="https://www.wemod.com/cheats" target="_blank">官网</a> 查看并检索游戏支持情况</figcaption><h3 id="自动游戏检测">自动游戏检测</h3><p>WeMod 将会自动检测你库中的游戏，并适配对应版本的修改器。支持自动识别 Steam、Epic、Windows Store、Uplay、Origin 等主流平台。</p><p><img src="https://cdn.sspai.com/2020/12/22/84b3cb69cd73d6daa044c82dd3dfd5ee.gif" alt="无需操心游戏位置"></p><p>检测到的游戏将出现在「游戏库」标签页的左侧，它会按照「兼容」、「可能兼容」、「不兼容」来分区（目前我的「不兼容」分区里是空的）。你还可以将喜爱的游戏放入游戏收藏夹，它会显示在列表最顶端，就像本图中的《看门狗：军团》。</p><p><img src="https://cdn.sspai.com/2020/12/22/a820c1a878404ff9b1e5bca195bd3a4f.png" alt="左侧栏向下滚动也可以看到所有支持的游戏"></p><p>同时在右侧会显示「最近玩过」、「新游戏」和「人气游戏」。</p><p><img src="https://cdn.sspai.com/2020/12/22/2b9b8464508fec64747f6bb7bbd21b19.png" alt=""></p><h3 id="多样化的版本支持">多样化的版本支持</h3><p>你可能注意到上图的「人气游戏」板块，《赛博朋克 2077》出现了两次，这是因为 WeMod 上<strong>修改器是分平台的</strong>！也就是说你不必担心，不同平台的游戏版本差异导致修改器不能正常工作，WeMod 已经贴心地帮你处理好了这些。</p><p><img src="https://cdn.sspai.com/2020/12/22/6e1a0707922b4cd0e12f67a3e46af492.png" alt="比如《赛博朋克 2077》就分别做了三个平台的适配"></p><p><img src="https://cdn.sspai.com/2020/12/22/9ee7faa8cbc6dd57777cb8d876d24ada.png" alt="《刺客信条：奥德赛》适配了五个版本，由不同作者完成并维护"></p><p>不仅如此，WeMod 还会对不同图形接口进行适配，比如《控制（Control）》就分了DirectX 11 和 DirectX 12 两个版本。</p><p><img src="https://cdn.sspai.com/2020/12/22/94f04d33ae941c590f1a05107262f78c.png" alt="考虑的很周到"></p><p>可以说，WeMod 为了让你安心地使用修改器，下足了功夫。</p><h3 id="直观且丰富的修改器控制界面">直观且丰富的修改器控制界面</h3><h4 id="修改器本体">修改器本体</h4><p>终于进入到「主菜」了！其实修改器是一种功能导向性软件，而且大部分时间在后台运行，即用即扔。这就意味着，如果核心功能不能打，「配菜」再怎么花里胡哨也无济于事。</p><p>那么 WeMod 的修改器部分到底能不能打呢？<strong>当然能</strong>。我们还是拿《赛博朋克 2077》为例。</p><p><img src="https://cdn.sspai.com/2020/12/22/0f039776632ebe7f8ef9f443963dcd01.png" alt=""><img src="https://cdn.sspai.com/2020/12/22/6d3780bbeffcd686d82817a71a21edc9.png" alt=""></p><p>可以看到针对《赛博朋克 2077》，修改器按照「玩家」、「物品栏」、「统计数据」、「武器」、「敌人」、「游戏」六个板块进行了分类，左侧文字是功能描述，右侧的键位则是激活功能的快捷键，总计 32 种可修改功能，给足了玩家「骚操作」的空间。其他的游戏也都是如此，会<strong>按照板块分类</strong>，提供<strong>丰富功能</strong>的同时也实现了<strong>排版上的清晰</strong>。</p><p>更令人喜爱的小功能是，你可以通过点击右侧的键位<strong>更改成自己想要的快捷键</strong>，这是大部分修改器所不能做到的。</p><p><img src="https://cdn.sspai.com/2020/12/22/c1500f716dd21ebbf582da12880865b8.gif" alt="值得点赞的自定义键位功能"></p><p>那如何开始使用修改器呢？<strong>只需点击右上角的「开始游戏」，即可通过键盘快捷键来激活修改器的功能。</strong></p><hr><p>你可能注意到上述截图中的很多修改器作者名都是「FLiNG」，且《赛博朋克 2077》的修改器和最开始的截图功能一致，也是「三十二项」的。对，没错，「FLiNG」就是「风灵月影」本人，他在今年十月底正式加入了 WeMod 团队。同时有很多类似的开发者大大也加入了 WeMod 团队，所以你无需担心修改器的质量或功能数量问题，WeMod 平台绝对是<strong>更新最及时、功能最全的</strong>。</p><p><img src="https://cdn.sspai.com/2020/12/22/eb0660d60fb716dd956401a5cafb4e58.png" alt="「官宣」，欢迎大佬入驻"></p><hr><h4 id="「注释」、「讨论」、「历史记录」">「注释」、「讨论」、「历史记录」</h4><p>在修改器的右侧，你可以看到「讨论」和「历史记录」板块，可能也会有「注释」板块。这也是 WeMod 的特色功能。「注释」、「讨论」、「历史记录」分别起到了「使用提醒」、「社区讨论」和「版本管理」的作用。</p><p>举例说明，比如《看门狗：军团》这款游戏，由于 Uplay 平台有 BattlEye 反作弊保护，要使用修改器需在启动器中添加参数来禁用 BattlEye。这段描述就被写在了看门狗修改器右侧的「注释」中。</p><p><img src="https://cdn.sspai.com/2020/12/22/86884ff85f5bc4e2fde855cbc25e99e7.png" alt="当然，根据描述，其实只要通过 WeMod 启动即可，省了不少事儿"></p><p>点击「讨论」则会跳转到修改器的对应论坛页，你可以在上面看到详细的介绍、演示或重要事项，以及按时间线排序的开放讨论区。</p><p><img src="https://cdn.sspai.com/2020/12/22/1e006e1e97d41ea1950098c1296730a7.png" alt="这里的「下载」按钮其实下载的就是 WeMod 本体"></p><p>而点击「历史记录」，则可以看到指定修改器的更新历史，最强悍的地方就在于，这份时间线是可以随意切换的，你可以通过点击历史版本手动调回旧版本。</p><p><img src="https://cdn.sspai.com/2020/12/22/a04929f8516e321e97d495def025e0e9.png" alt="感觉上没什么用，也许关键时刻可以救急？"></p><h4 id="关于鼠标激活和多语言的一些问题">关于鼠标激活和多语言的一些问题</h4><p>说了这么多修改器的优点，但其实还是有些小「缺陷」的。</p><ol><li>免费用户无法通过鼠标点击激活功能，不过一般修改器是后台使用，就我个人而言影响不大。</li><li>如你所见，目前修改器功能介绍并没有支持中文，然而修改器对应的都是游戏中的简单英语，对大部分用户也不影响使用。</li></ol><p>对于前一个问题，如果非常在意，可以通过升级 Pro 用户来解决；对于功能汉化问题，其实无需担心，官方已经在有意推行着多语言翻译问题，比如界面的「简体中文」支持是最新版本才更新的，而修改器、新闻等更多的中文翻译，官方承诺将采用<strong>社区翻译</strong>的方式上线，相信很快就可以解决。</p><p><img src="https://cdn.sspai.com/2020/12/22/1e8e0f19d2b657eeb4fb9cfa84f07442.png" alt="相信开放社区的力量"></p><h3 id="活跃且健康的社区">活跃且健康的社区</h3><p>WeMod 维护着一个<strong>活跃且健康</strong>的 <a href="https://community.wemod.com">社区</a> ，社区的讨论氛围好、专注制作修改器的大佬也多。</p><p>除了现有的修改器，每一个 WeMod 用户也可以「请求」新游戏修改器上线或修改器更新。通过完成「目标」获得的 WePoints 点数来兑换「代币」即可给心仪的游戏「投票」。（兑换比例 250 比 1，Pro 用户每月可获得 5 代币）</p><p><img src="https://cdn.sspai.com/2020/12/22/d5cefb1c4434cc94406cec25d80de230.png" alt="我想用的修改器都有，所以其实没用过这个功能"></p><h3 id="看不见但很重要的安全问题">看不见但很重要的安全问题</h3><p>国产修改器最让人诟病的莫过于，被黑心商人「二次包装」。用广告或捆绑软件恶心人还算好，天晓得会不会植入什么病毒，本来想修改游戏，结果把电脑给「修改」了就不好了。</p><p>然而使用 WeMod 就完全不需要担心这种问题。一是有<strong>大量用户长时间使用</strong>，且<strong>社区活跃</strong>，有什么问题也可能会被及时发现。二是官方也提供了<strong>完整的病毒检测报告</strong>，感兴趣的话可以在 <a href="https://www.virustotal.com/gui/file/e68c0e2cfb2a2b33e5268f6343cbf0b68b8e332eb13d5b36bc5288b96f797be6/detection">VirusTotal</a> 查看报告详情。</p><p><img src="https://cdn.sspai.com/2020/12/22/6258a1cb25bde11a2116ab18becdefff.png" alt="「一片绿」的报告还是挺让人安心的"></p><hr><p>到此为止，便是 WeMod 免费用户的全部功能，可以说是<strong>完全够用</strong>了，下面将介绍付费功能。</p><h2 id="如果富裕，可以升级至专业版支持他们">如果富裕，可以升级至专业版支持他们</h2><p>这么良心的软件，他们通过什么方式赚钱？</p><ol><li>用户充值 WePoints 点数或「代币」来给请求的游戏投票</li><li>订阅制的专业版（Pro）会员</li></ol><p>下图非常清晰的展示了专业版到底多了哪些功能：</p><p><img src="https://cdn.sspai.com/2020/12/22/ff4650d03c6b43b1625c575798eecc3f.png" alt="看完就感到免费版真良心"></p><p>可以看到 WeMod 专业版里最「重量级」的功能其实是通过手机来「远程控制」修改器。这是一个非常方便的功能，相当于给了一个直观的<strong>外置控制面板</strong>，你无需去记忆快捷键位也无需切出，只需要在手机上动动手指就可以远程控制修改器，提高了游戏的沉浸感和体验。此 App 支持 iOS 和安卓。</p><p>剩下的功能，「鼠标控制」、「更多投票数」和「更多主题色」其实是比较无关痛痒的。专业版月费 7.99 美元，年付月费 5 美元，支持银行卡和 PayPal 支付。价格不低，维护社区不易，升级就权当支持 WeMod 团队了。</p><p><img src="https://cdn.sspai.com/2020/12/22/b655e5d39c3cfff42ded9dc1c42bde35.png" alt="激动的心、颤抖的手看到价格后都平静了下来😐"></p><p>哦对了，其实你也可以通过「邀请朋友」来获得 <strong>1 周</strong>的专业版会员资格。</p><p><img src="https://cdn.sspai.com/2020/12/22/4e95553c9e2dfe069fd27ae435454b58.png" alt="1 周够通关《赛博朋克 2077》了"></p><hr><p>最后，WeMod 官网是这么介绍自己的👇（广告法警告⚠️）</p><blockquote><p><strong>WeMod</strong> is <strong>the world’s best</strong> application for modding hundreds of single-player PC games.</p></blockquote><p>重新回顾 WeMod：干净简洁的用户体验和设计、既多样又人性化的整合形式与使用方法、修改器领域独一无二的社区文化、时刻保持功能创新、内容质量良心的免费版……</p><p>嗯，我想 WeMod 它确实如此「best」，当之无愧。</p><div class="box app_recommend">  <article class="media">    <figure class="fences-icon media-left app_icon image">      <img class="not-gallery-item" src="https://cdn.sspai.com/2020/12/23/ba88f6bbc85571238f7cdc78e44090fd.png" />    </figure>    <div class="media-content">      <div class="content">        <p>          <strong>WeMod</strong>          <br />          <small>世界上最好的游戏修改器合集</small>        </p>      </div>    </div>    <nav class="level is-flex download-icon is-align-items-center">      <a href="https://www.wemod.com/download">      <span class="icon is-medium steam-icon">        <b>w</b>          </a>      </span>    </nav>    <div class="product__price-tag"><p class="product__price-tag-price" style="color: #fff;font-size: 13px;font-weight: bold;">免费</p></div>  </article></div><style>.steam-icon{background-color:#171a21;color:white} .stardock-icon{background-color:#014b8d;fill:white;} .taobao-icon{background-color:#fe8600;} .dark .fences-icon{background-color: #1d1d1f} .fences-icon{background-color: white} .fences-icon{padding:7px !important;display: flex; align-items: center;} .fences-icon img{border-radius: 0px !important;vertical-align:middle;object-fit: initial !important; height: auto !important;}</style>]]></content>
    
    
    <summary type="html">修改不了人生，但你可以修改游戏。</summary>
    
    
    
    <category term="工具" scheme="https://anzifan.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="软件推荐" scheme="https://anzifan.com/tags/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    
    <category term="Windows" scheme="https://anzifan.com/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>创造 CANDY 主题，只为更好的交互</title>
    <link href="https://anzifan.com/post/icarus_to_candy_1/"/>
    <id>https://anzifan.com/post/icarus_to_candy_1/</id>
    <published>2020-11-18T22:00:00.000Z</published>
    <updated>2020-12-22T08:17:49.224Z</updated>
    
    <content type="html"><![CDATA[<article class="message is-info">   <div class="message-header">  <i class="fas fa-info-circle mr-2"></i>   <p>📚本系列文章，将分成四个板块更新</p>  </div>   <div class="message-body"> <ol><li><a href="/post/icarus_to_candy_1/"><strong>基础设计修改</strong></a>  <span class="icon has-text-success">  <i class="fas fa-check-square"></i></span></li><li>配置 Twikoo 评论</li><li>增加深色模式支持</li><li>其他细节与模块</li></ol></d/iv> </article><style>.message-header {  justify-content: start !important;}  .message.is-info{    width: 50%;float: right;margin-left: 20px;    margin-bottom: 11px !important;  }  @media screen and (max-width: 768px){    .message.is-info{    width: 100%;float: none;margin-left: 0;  }  }</style><p>众所周知，Icarus<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> 是一个非常优秀的 Hexo 主题。它不仅提供清爽、简洁的界面，还与各种主流插件、组件兼容的很好。更令人欣喜的是——它几乎是最活跃的 Hexo 主题之一，有着非常良好的社区氛围。作者时刻保持更新，并提供了非常完善的文档。</p><p>种种因素使我最终选择了它，并准备在其基础上修改出自己满意的设计，我将其命名为 <strong>Candy</strong>，并将在 <a href="https://github.com/MannyCooper/hexo-theme-candy">GitHub</a> 上与 Icarus 保持更新。本文将是这一系列文章的第一节——基础设计修改。</p><article class="message message-immersive is-warning">  <div class="message-body">    <i class="fas fa-exclamation-triangle"></i>    本人前端零基础，如有不妥，请在<a href="#twikoo">评论区</a>教我做事，谢谢🙏  </div></article><h2 id="真正的卡片式设计——让最频繁的交互更人性化">真正的卡片式设计——让最频繁的交互更人性化</h2><h3 id="分析">分析</h3><p>Icarus 主题很美观，但对我来说它与许多 Hexo 主题一样都存在一个核心问题，即首页的文章如需访问全文，需要点击 <code>Read More</code> 按钮、图片或标题才可以进入，而点击主文字或卡片空白处是没有反应的，恰好很多博主喜欢把摘要写成长篇大论，此时的 <code>Read More</code> 按钮看起来更小，很容易被忽视，点击大段文字也许是很多读者的第一反应，虽然这并不会得到任何回应。</p><picture>    <source srcset="https://static.anzifan.com/uPic/1_long_abstract_dark.png" media="(prefers-color-scheme: dark)">    <source srcset="https://static.anzifan.com/uPic/1_long_abstract.png" media="(prefers-color-scheme: light)">    <img class="adapt" src="https://static.anzifan.com/uPic/1_long_abstract.png" alt="大佬们的博客，长长的「摘要」使 Read More 按钮显得特别小"></picture><p><strong>点击、进入全文，这应该是每个博客最频繁的交互。</strong>尴尬的小按钮难免给读者造成一些细微的障碍，当然如果对自己的内容足够自信，或者没那么讲究的话，你就可以跳过这一节了。</p><h3 id="尝试">尝试</h3><p>为了达成真正的卡片效果，我探索过一些方法。</p><p>我的第一反应是在 <code>&lt;article&gt;</code> 标签外套一层 <code>&lt;a&gt;</code> 标签然后设置 <code>href</code> 属性，同时 <code>&lt;article&gt;</code> 要设置成块级元素。于是我便在 <code>layout/common/article.jsx</code> 中这样修改：</p><pre><div class="caption"><span>layout/common/article.jsx</span></div><code class="hljs jsx">&lt;a <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;card-link&quot;</span> href=&#123;index ? url_for(page.link || page.path):<span class="hljs-literal">null</span>&#125;&gt;  &lt;article <span class="hljs-class"><span class="hljs-keyword">class</span></span>=&#123;<span class="hljs-string">`card-content article<span class="hljs-subst">$&#123;<span class="hljs-string">&#x27;direction&#x27;</span> <span class="hljs-keyword">in</span> page ? <span class="hljs-string">&#x27; &#x27;</span> + page.direction : <span class="hljs-string">&#x27;&#x27;</span>&#125;</span>`</span>&#125; role=<span class="hljs-string">&quot;article&quot;</span>&gt;  ...  &lt;/article&gt;&lt;/a&gt;</code></pre><p>感觉非常合理，但其实并不行，如果这样操作，在实际页面中，<code>&lt;a&gt;</code> 标签并不会正确包裹，反而会被添加到 <code>&lt;article&gt;</code> 元素下每个子元素的首位。我并不确定是什么原因，但是根据 Stack Overflow 上的一篇<a href="https://stackoverflow.com/questions/38367002/make-entire-article-tag-a-link/38367067#38367067">回答</a>中的评论：</p><blockquote><p>You should really point out (by suggesting this way) that: using this solution you <strong>cannot have other Anchor elements inside the article</strong>.<a href="https://stackoverflow.com/questions/38367002/make-entire-article-tag-a-link/38367067#comment64146037_38367067">Roko C. Buljan Jul 14 '16 at 6:51</a></p></blockquote><p>貌似如果想这样操作的话，子元素不能再有其他 <code>&lt;a&gt;</code> 元素。我便以为是不可以的，当时就作罢了。</p><p>接下来，我尝试在外面先套一层 <code>&lt;object&gt;</code> 标签，再套 <code>&lt;a&gt;</code> 标签链接到正文，这样我们就实现了整张卡片可点击的效果。</p><pre><div class="caption"><span>layout/common/article.jsx</span></div><code class="hljs jsx">&lt;a <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;card-link&quot;</span> href=&#123;index ? url_for(page.link || page.path) : <span class="hljs-literal">null</span>&#125;&gt;  &lt;object <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;card-object&quot;</span>&gt;    &lt;article <span class="hljs-class"><span class="hljs-keyword">class</span></span>=&#123;<span class="hljs-string">`card-content article<span class="hljs-subst">$&#123;<span class="hljs-string">&#x27;direction&#x27;</span> <span class="hljs-keyword">in</span> page ? <span class="hljs-string">&#x27; &#x27;</span> + page.direction : <span class="hljs-string">&#x27;&#x27;</span>&#125;</span>`</span>&#125; role=<span class="hljs-string">&quot;article&quot;</span>&gt;      ...    &lt;/article&gt;  &lt;/object&gt;&lt;/a&gt;</code></pre><p>这样确实可以了，本来这一段到这里就结束了，但我想起了<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/object">文档</a>里对 <code>&lt;object&gt;</code> 标签的描述：</p><blockquote><p><strong>HTML <code>&lt;object&gt;</code> 元素</strong>（或者称作 <em>HTML 嵌入对象元素</em>）表示引入一个<strong>外部资源</strong>，这个资源可能是一张图片，一个嵌入的浏览上下文，亦或是一个插件所使用的资源。<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/object">MDN</a></p></blockquote><p>啊这，有一丝隐隐的不安<img class="not-gallery-item" src="https://static.anzifan.com/uPic/1_meme_cat_think.jpeg" style="width:28px;" />。迅速查了下 SEO，发现目前 Google 是会索引 <code>object</code> 元素的，但心里就是不舒服，毕竟不太符合语义。</p><p>于是乎，就换来了接下来的方法，也是最终的实现方法。</p><h3 id="解法">解法</h3><p>这种方法的思路其实和第一种是一致的，但是具体实现有区别，这次我们不在 <code>article.jsx</code> 里修改了，直接在 <code>source/js/main.js</code> 最底下添加：</p><pre><code class="hljs js"><span class="hljs-keyword">if</span> ($(<span class="hljs-string">&#x27;.article-licensing.box&#x27;</span>).length === <span class="hljs-number">0</span>)&#123;  $(<span class="hljs-string">&quot;.card-content.article&quot;</span>).each(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;    $(<span class="hljs-built_in">this</span>).wrap(<span class="hljs-string">&#x27;&lt;a class=&quot;card-link&quot; href=&quot;&#x27;</span> + $(<span class="hljs-built_in">this</span>).find(<span class="hljs-string">&#x27;h1 a&#x27;</span>).attr(<span class="hljs-string">&#x27;href&#x27;</span>) + <span class="hljs-string">&#x27;&quot;&gt;&lt;/a&gt;&#x27;</span>);  &#125;)&#125;</code></pre><p>其实就是用了 jQuery 的 <code>warp()</code> 方法<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>，这里我们指定 <code>&lt;a&gt;</code> 元素来包裹 <code>&lt;article&gt;</code> 元素。同时因为我们只需要在首页让这些卡片有链接，所以我们可以通过判断正文末尾的版权信息盒子是否存在，来控制这条语句是否生效。</p><p>我们还需要设置一下 <code>card-link</code> 的 <code>color</code> 为 <code>inherit</code>，这样摘要的颜色就会恢复成白色，否则会是你 <code>a</code> 标签的颜色（自定义 CSS 的方法在后文）：</p><pre><code class="hljs stylus">.card-link    <span class="hljs-attribute">color</span>: inherit</code></pre><p>这样我们就实现了整个卡片可点击，且卡片里原有的分类链接照样可以点击并不受影响。但我并不知道为何第一种和第三种方法会有这样的差异，如果有大佬清楚请在<a href="#twikoo">评论区</a>解答我，谢谢。</p><h2 id="加入一点动效会让体验更好吗？答案是肯定的">加入一点动效会让体验更好吗？答案是肯定的</h2><p>所谓「交互」，代表着交流和互动。一个好的交互设计，组件与用户的互动是必不可少的。互联网厂商们早已发现了这一逻辑，并将这些互动悄悄藏在设计里，通过微小的震动、令人愉悦的变换俘获用户的感官。</p><p>简单来说，光将整张卡片链接到正文还不够，它得是让用户有感知的，这个感知就由动效来实现。</p><p>废话少说，先上效果图👇：</p><p style="text-align: center"><picture>    <source srcset="https://static.anzifan.com/uPic/1_card_dark.gif" media="(prefers-color-scheme: dark)">    <source srcset="https://static.anzifan.com/uPic/1_card_light.gif" media="(prefers-color-scheme: light)">    <img class="adapt" src="https://static.anzifan.com/uPic/1_card_light.gif" alt="动图可能看不太清楚，可自行在本博客体验效果，深色模式和浅色模式下会有细微的差别"></picture></p><p>为实现这个效果，我增加了：</p><ul><li><p>向上的位移</p></li><li><p>阴影的变换</p></li><li><p>题图的变大（深色模式下，还增加了题图的变暗）</p></li></ul><p>我希望能用纯 CSS 解决的，尽量只用 CSS。为了后期与 Icarus 同步更方便，我们修改 <code>source/css</code> 目录下的 <code>style.styl</code> 来自定义样式。Icarus 使用 Stylus<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup> 作为 CSS 预处理器。它的定义生效规则是：</p><blockquote><p>一个变量不能影响在定义它以前的输出样式。<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p></blockquote><p>所以为了方便，我们可以把所有自定义样式放在最前面，把 <code>@import</code> 放在最后。</p><h3 id="位移与阴影">位移与阴影</h3><p>首先，我们将位移与阴影一起添加，效果模仿自 <a href="https://gridsome.org/starters/gridsome-blog-starter/">Gridsome Blog Starter</a> 🙏。</p><p>因为我不希望在正文处也出现动效，同时希望尽可能用纯 CSS 解决，所以我在 <code>article.jsx</code> 最前面添加一个只在正文生效的空的 <code>div</code> 元素，并通过 class 名「controller」来控制：</p><pre><div class="caption"><span>article.jsx</span></div><code class="hljs jsx"><span class="hljs-keyword">return</span> &lt;Fragment&gt;  <span class="hljs-comment">// 通过判断 index 是否存在，来决定是否是正文。</span>  &#123;!index ? <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#123;</span>&#x27;<span class="hljs-attr">controller</span>&#x27;&#125;&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>: <span class="hljs-literal">null</span>&#125;  ...&lt;/Fragment&gt;</code></pre><p>这样一来，正文的最前面就会多一个空的、class 名为「controller」的 <code>div</code> 元素。接下来我们写伪类：</p><pre><code class="hljs stylus"><span class="hljs-selector-class">.order-2</span> <span class="hljs-selector-class">.card</span>:hover    <span class="hljs-attribute">transform</span>: translateY(-<span class="hljs-number">5px</span>)    box-shadow: 1px 10px 30px 0 rgba(0,0,0,.1)    -webkit-<span class="hljs-attribute">transform</span>: translateY(-<span class="hljs-number">5px</span>)    -webkit-box-shadow: 1px 10px 30px 0 rgba(0,0,0,.1)<span class="hljs-comment">// 将兄弟元素为 .controller 的 .card 的 :hover 样式重制（无效化）</span><span class="hljs-selector-class">.order-2</span> <span class="hljs-selector-class">.controller</span> ~ <span class="hljs-selector-class">.card</span>:hover    <span class="hljs-attribute">transform</span>: none    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">4px</span> <span class="hljs-number">10px</span> rgba(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.05</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1px</span> rgba(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>)    -webkit-<span class="hljs-attribute">transform</span>: none    -webkit-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">4px</span> <span class="hljs-number">10px</span> rgba(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.05</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1px</span> rgba(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>)<span class="hljs-comment">// 加入过渡效果</span>.card    <span class="hljs-attribute">transition</span>: opacity <span class="hljs-number">0.3s</span> ease-out, transform <span class="hljs-number">0.3s</span> ease-out, box-shadow <span class="hljs-number">0.6s</span> !important</code></pre><p>可以看出来，这样写会有一些啰嗦和冗余，我尝试过一些想法都不太好，比如将 <code>index</code> 判断反写，把「controller」加在首页最上方，但 Icarus 原版的 <code>&lt;Fragment&gt;</code> 元素写法，会在每个卡片上加上一个 <code>div</code> 元素，从而打乱布局，让菜菜的我觉得麻烦<img class="not-gallery-item" src="https://static.anzifan.com/uPic/1_meme_cat_shock.JPG" style="width:28px;" />，所以先就这样，日后再改。</p><p>如果有大佬们有更好的解决方案，请在<a href="#twikoo">评论区</a>赐教。</p><details class="callout"> <summary><b>点击展开查看</b>：一个现在不兼容，但未来可能可以的做法。</summary><p>菜菜的我本来很辛苦的摸索了出来这种写法，结果发现目前只有 Safari 和最新版本的 Firefox 可以<a href="https://caniuse.com/css-not-sel-list">比较好的支持</a><img class="not-gallery-item" src="https://static.anzifan.com/uPic/1_meme_panda_tired.JPG" style="width:32px;" />，这取决于浏览器对 CSS Selector Level 4 的支持程度（Safari 91% 支持，而 Chrome 只有 88%，这个特性恰好在这不支持的 3% 里）。</p><p>简单来说就是 <code>:not</code> 里嵌套兄弟选192择器 <code>~</code>：</p><pre><code class="hljs stylus"><span class="hljs-selector-class">.order-2</span> &gt; :not(<span class="hljs-selector-class">.controller</span> ~ .card):hover    <span class="hljs-attribute">transform</span>: translateY(-<span class="hljs-number">5px</span>)    box-shadow: 1px 10px 30px 0 rgba(0,0,0,.1)    -webkit-<span class="hljs-attribute">transform</span>: translateY(-<span class="hljs-number">5px</span>)    -webkit-box-shadow: 1px 10px 30px 0 rgba(0,0,0,.1)</code></pre><p>很好理解，这个选择器会选择兄弟不为 <code>.controller</code> 的 <code>.card</code>，这样只需要这一个语句即可。</p><p>关于这一特性的详细可以看 <a href="https://drafts.csswg.org/selectors-4/#negation">W3C Editor’s Draft</a> 和 <a href="https://css4-selectors.com/selector/css4/negation-pseudo-class/">CSS4 Selectors</a>，另附 <a href="https://caniuse.com/css-not-sel-list">Can I use 兼容情况</a>。</p></details><h3 id="题图">题图</h3><p>最后我们添加题图放大的动效，这里的效果模仿自 Apple 官网的 <a href="https://www.apple.com/newsroom/">Newsroom</a> 📰，注意 <code>:hover</code> 的写法，我希望鼠标放在卡片上时就激活（而不仅仅是放在题图上）：</p><pre><div class="caption"><span>style.styl</span></div><code class="hljs stylus"><span class="hljs-selector-class">.card</span>:hover    <span class="hljs-selector-class">.card-image</span> a        -webkit-<span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.03</span>)        <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.03</span>)<span class="hljs-comment">// 加入过渡效果</span><span class="hljs-selector-class">.card</span> <span class="hljs-selector-class">.card-image</span> a    -webkit-<span class="hljs-attribute">transition</span>: opacity <span class="hljs-number">1s</span> cubic-bezier(<span class="hljs-number">0.4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.25</span>, <span class="hljs-number">1</span>),    -webkit-<span class="hljs-attribute">transform</span> <span class="hljs-number">400ms</span> cubic-bezier(<span class="hljs-number">0.4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.25</span>, <span class="hljs-number">1</span>),<span class="hljs-number">200ms</span> -webkit-filter linear    <span class="hljs-attribute">transition</span>: opacity <span class="hljs-number">1s</span> cubic-bezier(<span class="hljs-number">0.4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.25</span>, <span class="hljs-number">1</span>),    <span class="hljs-attribute">transform</span> <span class="hljs-number">400ms</span> cubic-bezier(<span class="hljs-number">0.4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.25</span>, <span class="hljs-number">1</span>),<span class="hljs-number">200ms</span> filter linear</code></pre><p>细心的朋友可能会发现，光这样还不完美——图片在变换的过程中会先取消圆角，再恢复圆角，也就是说中间会有一段时间「四角方方」，这是我们不愿意看到的，解决方法也很简单，再添加一个 0 度的旋转<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup>即可：</p><pre><code class="hljs stylus"><span class="hljs-comment">// 修复变换时的圆角</span>.card-image    <span class="hljs-attribute">transform</span>: rotate(<span class="hljs-number">0deg</span>)    -webkit-<span class="hljs-attribute">transform</span>: rotate(<span class="hljs-number">0deg</span>)</code></pre><p>在黑暗模式下我还加入了题图变暗的效果。关于黑暗模式我会在之后详解，就不在本文中赘述了：</p><pre><code class="hljs stylus">-webkit-<span class="hljs-attribute">filter</span>: brightness(<span class="hljs-number">70%</span>)<span class="hljs-attribute">filter</span>:brightness(<span class="hljs-number">70%</span>)</code></pre><p>至此，我们便完成了一个用户友好的卡片设计，它整张卡片可点击，且有合适的动效互动，但这并不是 Candy 主题的全部，还有很多细节性的动效就不在这里赘述了，感兴趣的话可以去查看 <a href="https://github.com/MannyCooper/hexo-theme-candy/blob/publish/source/css/style.styl"><code>style.styl</code> 源码</a>。</p><h2 id="「跟着走」的导航栏，贴心而不恼人">「跟着走」的导航栏，贴心而不恼人</h2><p>最后，我想我需要一个会跟随页面的导航栏，它得是贴心的——当你需要它的时候，比如回首页、切换浅色/深色模式、搜索，它就在那里；它还得是不恼人的——它不应该遮挡太多，影响到正文或视觉平衡，它得是灵巧的，且更好的适配响应式设计。</p><h3 id="跟着走？No！它只是固定在那里">跟着走？No！它只是固定在那里</h3><p>导航栏不会真的跟着走的，我们只是给它添加一个 <code>position</code> 为 <code>fixed</code>的样式<img class="not-gallery-item" src="https://static.anzifan.com/uPic/1_meme_cat_awesome.jpg" style="width:28px;" />。这么做的同时还需要调整 <code>width</code> 为 <code>100%</code> 并将下一个元素 <code>section</code> 下移：</p><pre><code class="hljs stylus">.navbar-main    <span class="hljs-attribute">position</span>: fixed !important    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span> !important    <span class="hljs-attribute">top</span>: <span class="hljs-number">0px</span>.section    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">45px</span></code></pre><p>当然，也可以采用 <code>sticky</code> 不过兼容性会<a href="https://caniuse.com/?search=sticky">差一些</a>，在此案例中效果是一样的。使用 <code>sticky</code> 就不需要设置 <code>section</code> 的下移，不过需要设置 <code>top</code> 属性：</p><pre><code class="hljs stylus">.navbar-main    <span class="hljs-attribute">position</span>: sticky !important    <span class="hljs-attribute">position</span>: -webkit-sticky !important    <span class="hljs-attribute">top</span>: <span class="hljs-number">0px</span></code></pre><h3 id="「瘦身」-「毛玻璃」，让导航栏灵巧一些">「瘦身」+「毛玻璃」，让导航栏灵巧一些</h3><p>接下来我想让导航栏看起来更轻巧一些，于是缩窄了导航栏的高度并加入了所谓「毛玻璃」效果。</p><h4 id="「瘦身」">「瘦身」</h4><p>通过修改 <code>navbar-item</code> 的内外边距来缩窄高度：</p><pre><code class="hljs stylus">.navbar-item    <span class="hljs-attribute">margin</span>: <span class="hljs-number">4px</span> !important    <span class="hljs-attribute">padding</span>: <span class="hljs-number">8.5px</span> !important</code></pre><p>同时 Icarus 原版对于移动端的处理是将 logo 放在一个自适应的 <code>div</code> 里，当屏幕宽度小于 1088 px 的时候，导航栏会分成上下两行。</p><p>但这对于一个一直固定在顶端的导航栏来说太大了，所以这里我做了个修改，将自适应去掉，把 logo 也放在 <code>navbar-menu</code> 里：</p><pre><div class="caption"><span>layout/common/navbar.jsx</span></div><code class="hljs diff"><span class="hljs-deletion">- &lt;div class=&quot;navbar-brand justify-content-center&quot;&gt;</span><span class="hljs-deletion">-&lt;a class=&quot;navbar-item navbar-logo&quot; href=&#123;siteUrl&#125;&gt;&#123;navbarLogo&#125;&lt;/a&gt;</span><span class="hljs-deletion">- &lt;/div&gt;</span> &lt;div class=&quot;navbar-menu&quot;&gt;<span class="hljs-addition">+&lt;a class=&quot;navbar-item navbar-logo&quot; href=&#123;siteUrl&#125;&gt;&#123;navbarLogo&#125;&lt;/a&gt;</span>... &lt;/div&gt;</code></pre><p>效果图：</p><p style="text-align: center"><picture>    <source srcset="https://static.anzifan.com/uPic/1_navbar_dark.png" media="(prefers-color-scheme: dark)">    <source srcset="https://static.anzifan.com/uPic/1_navbar.png" media="(prefers-color-scheme: light)">    <img class="adapt" src="https://static.anzifan.com/uPic/1_navbar.png" alt="改动后的导航栏更窄更清爽了（右）"></picture></p><p>当然，还有些更好的方案，比如制作下拉菜单栏，以解决导航栏里的标签页太多超出屏幕宽度的问题，可以见这个旧版本的 <a href="https://github.com/ppoffice/hexo-theme-icarus/pull/616">PR</a>。有空的时候我会改进导航栏，如果真的有人看的话。</p><h4 id="「毛玻璃」">「毛玻璃」</h4><p>所谓「毛玻璃」，更专业一点的说法叫「Backdrop Filter effect」，即背景过滤效果。所以核心就是 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/backdrop-filter"><code>backdrop-filter</code> 样式</a>。我这里依旧模仿的 Apple <a href="https://www.apple.com/newsroom/">Newsroom</a>，将 <code>navbar</code> 背景色变透明并增加饱和度和模糊：</p><pre><code class="hljs stylus">.navbar    -webkit-backdrop-<span class="hljs-attribute">filter</span>: saturate(<span class="hljs-number">180%</span>) blur(<span class="hljs-number">20px</span>)    backdrop-<span class="hljs-attribute">filter</span>: saturate(<span class="hljs-number">180%</span>) blur(<span class="hljs-number">20px</span>)    <span class="hljs-attribute">background-color</span>: rgba(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0.7</span>) !important    <span class="hljs-comment">//黑暗模式下颜色为 rgba(29,29,31,0.7)</span></code></pre><p>再将 <code>navbar-menu</code> 背景设为透明，这样小尺寸屏幕下也能正常显示：</p><pre><code class="hljs stylus"><span class="hljs-selector-class">.navbar-main</span> .navbar-menu    <span class="hljs-attribute">background-color</span>: transparent</code></pre><p>效果图：</p><p style="text-align: center"><picture>    <source srcset="https://static.anzifan.com/uPic/1_navbar_dark.gif" media="(prefers-color-scheme: dark)">    <source srcset="https://static.anzifan.com/uPic/1_navbar_light.gif" media="(prefers-color-scheme: light)">    <img class="adapt" src="https://static.anzifan.com/uPic/1_navbar_light.gif" alt=""></picture></p><h3 id="最后，修复锚元素定位">最后，修复锚元素定位</h3><p>我们固定了导航栏，紧接着问题就来了。你会发现之前的页内锚元素跳转全都错位了（比如目录、脚注），更准确的来说是正好被现在的导航栏所遮挡，所以我们要来修复这个 bug。</p><h4 id="脚注修复">脚注修复</h4><p>先来修复简单的，修复脚注我们只需要用到 CSS（因为新版目录是用 JavaScript 来控制 <code>href</code> 属性值的，这个方法就不行了)，这里我们用到一个小技巧，即用 <code>:target</code> 去定位目标元素，并用 <code>::before</code> 在前面加一个空的行内元素，然后通过 <code>padding-top</code> 和 <code>margin-top</code> 配合来控制位置这样就修复了正文到脚注的跳转错位：</p><pre><code class="hljs stylus">:target::before     <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>    <span class="hljs-attribute">display</span>: inline-block    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">73px</span>    <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">73px</span></code></pre><p>稍微解释一下，这里就是先用 <code>padding-top</code> 将这个空的 <code>inline-block</code> 移动到距离其容器上方 N px 的位置，然后通过 <code>margin-top</code> 将这个容器整体上移 N px 的位置，这样我们就可以通过调整 N 的值来控制元素的位置。</p><p>同理，我们还需要修复下脚注到正文的跳转：</p><pre><code class="hljs stylus"><span class="hljs-selector-class">.footnote-item</span>::before     <span class="hljs-attribute">display</span>: block    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">55px</span>    <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">55px</span>    <span class="hljs-attribute">margin-bottom</span>: -<span class="hljs-number">25px</span></code></pre><p>这里有一些细微的差别，因为脚注是一个列表，列表的元素应该按一整条一整条来看，所以我们把 <code>display</code> 改为 <code>block</code>，再按照之前的方法适当调整一下距离，最后我们还需要通过 <code>margin-bottom</code> 来对齐文本和序号。</p><h4 id="目录修复">目录修复</h4><p>如果你不需要一个「随着滚动到不同位置，动态折叠展开」的目录，你可以使用<a href="https://github.com/MannyCooper/hexo-theme-candy/blob/d6524f98b0faeb866172b4a9a948ee9dc4c81081/source/js/toc.js">这个</a>旧版本的 <code>toc.js</code>，并且采用上面修复脚注的方式来修复错位，这里我就不赘述了。</p><p>如果你需要这样一个「智能」的目录，请采用<a href="https://github.com/MannyCooper/hexo-theme-candy/blob/465b3a7342d99981972075c8d7bd0228be699a69/source/js/toc.js">最新版本</a>的 <code>toc.js</code> 并把它放在 <code>source/js</code> 里，这里我只说下对于错位的修复。</p><p>首先在 <code>source/js/toc.js</code> 中创建一个 <code>scrollTo</code> 方法来代替不支持偏移量的 <code>scrollIntoView</code> 方法：</p><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scrollTo</span>(<span class="hljs-params">id</span>) </span>&#123;  <span class="hljs-keyword">var</span> element = <span class="hljs-built_in">document</span>.getElementById(id);  <span class="hljs-keyword">var</span> headerOffset = -<span class="hljs-number">20</span>; <span class="hljs-comment">// 偏移量</span>  <span class="hljs-keyword">var</span> elementPosition = element.offsetTop;  <span class="hljs-keyword">var</span> offsetPosition = elementPosition - headerOffset;  <span class="hljs-built_in">document</span>.documentElement.scrollTop = offsetPosition;  <span class="hljs-built_in">document</span>.body.scrollTop = offsetPosition; <span class="hljs-comment">// 适配 Safari</span>&#125;</code></pre><p>没有什么可说的，非常好理解，然后在下面替换即可：</p><pre><code class="hljs diff">if (typeof $heading.scrollTo <span class="hljs-comment">=== &#x27;function&#x27;) &#123;</span><span class="hljs-deletion">- $heading.scrollIntoView(&#123; behavior: &#x27;smooth&#x27; &#125;);</span><span class="hljs-addition">+ scrollTo($heading.id);</span>&#125;</code></pre><p>就是这么简单，我们完成了所有错位修复。</p><h2 id="写在最后的、其他的一些玩意儿">写在最后的、其他的一些玩意儿</h2><p>感谢你看到这里，零基础的我可能比较啰嗦，这当然不是我在视觉和交互上做出的全部修改，尽量挑了些对我来说比较有代表性的「坑」，大佬们见笑了。一些细枝末节的修改，网络上可能已经有无数篇相同的文章教你如何去操作了，我就不费口舌了。当然如果你有任何疑问、评价或想教我做事儿，也请不要吝啬，<strong>请在文末的评论区给我留言</strong>，我会第一时间回复。</p><p>这是 Candy 主题修改系列的第一篇，应该也是最零碎的一篇，我非常迫不及待地想分享关于黑暗模式的实现，但是先忍住，下一篇将会是关于 Twikoo 的，一个非常崭新的评论系统，美观、安全、易用、免登录、免费等等，虽然它还有很长的路要走，但目前配得上这些美好的词汇。希望我能在官方作者写出详细教程之前发布（逃）。</p><p>本文完。</p><a class="tag is-medium" href="mailto:541297173@qq.com?subject=「创造 CANDY 主题，只为更好的交互」一文的封面图授权申请" target="_blank"><span class="icon" style="word-wrap: break-word;"><i class="fas fa-palette"></i></span>原创封面图，使用需<b>授权</b>，请勿盗用 </a><h2 id="脚注">脚注</h2><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://github.com/ppoffice/hexo-theme-icarus">Icarus 主题的 GitHub 仓库主页</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><strong><a href="https://api.jquery.com/wrap/">.wrap( wrappingElement )</a></strong>: <em>Wrap an HTML structure around each element in the set of matched elements.</em> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>Stylus 是富于表现力、健壮、功能丰富的 CSS 预处理器，详见<a href="https://stylus-lang.com">官网</a>。 <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p><a href="https://efe.baidu.com/blog/revisiting-css-preprocessors/#%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F">再谈 CSS 预处理器｜变量作用域 - Justineo</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p><a href="https://blog.csdn.net/u011456552/article/details/53464157">图片transform其父级的border-radius失效 - 沈志勇说</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">基于 ICARUS 主题重新思考并设计个人博客。</summary>
    
    
    
    <category term="技术" scheme="https://anzifan.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://anzifan.com/tags/Hexo/"/>
    
    <category term="博客主题" scheme="https://anzifan.com/tags/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98/"/>
    
    <category term="交互设计" scheme="https://anzifan.com/tags/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="前端" scheme="https://anzifan.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
